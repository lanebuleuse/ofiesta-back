security:
    encoders:
        App\Entity\User:
            algorithm: auto
        Symfony\Component\Security\Core\User\User:
            algorithm: auto

    
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers

    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
        #users_in_memory:
        #    memory:
        #        users:
        #            # pour tester
        #            test@test.fr: { password: "$argon2id$v=19$m=65536,t=4,p=1$G1rz1HbBsJlng+WXyKU3Wg$1iMXtf8THk5+3+m8btiA2g4OBJt8zn82hOXPUKZfllM", roles: ['ROLE_ADMIN'] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            pattern: ^/login
            guard:
                authenticator:
                   - App\Security\LoginFormAuthenticator
            anonymous: lazy
            form_login:
                login_path: login
                check_path: login
            
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
        
        apipublic:
            pattern: ^/api/v1/public
            stateless: true
            anonymous: true
        api:
            pattern:   ^/api
            stateless: true
            
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
                    #- App\Security\LoginFormAuthenticator
                #entry_point: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true  

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/v1/public, roles: IS_AUTHENTICATED_ANONYMOUSLY} 
        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
